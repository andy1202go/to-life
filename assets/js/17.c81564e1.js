(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{400:function(s,a,t){"use strict";t.r(a);var n=t(5),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"codecademy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#codecademy"}},[s._v("#")]),s._v(" Codecademy")]),s._v(" "),a("h3",{attrs:{id:"helloworld部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#helloworld部分"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Helloworld部分")])]),s._v(" "),a("ol",[a("li",[s._v("很有意思的一点是，刚开始告知学员，编程是写一段东西，然后让电脑懂你说的是什么指令，下一步就是学习怎么不让电脑读我写的东西，即注释，确实从初学者视角会有这个疑惑的可能")]),s._v(" "),a("li",[s._v("print()函数是教电脑说话，好角度")])]),s._v(" "),a("h2",{attrs:{id:"python3-教程-菜鸟教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python3-教程-菜鸟教程"}},[s._v("#")]),s._v(" "),a("strong",[a("a",{attrs:{href:"https://www.runoob.com/python/python-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python3 教程 | 菜鸟教程"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://pythontutor.com/visualize.html#mode=edit",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python Tutor: Visualize code"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"python-发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-发展历史"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Python 发展历史")])]),s._v(" "),a("p",[s._v("Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。")]),s._v(" "),a("p",[s._v("Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。")]),s._v(" "),a("p",[s._v("像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。")]),s._v(" "),a("p",[s._v("现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。")]),s._v(" "),a("p",[s._v("Python 2.7 被确定为最后一个 Python 2.x 版本，它除了支持 Python 2.x 语法外，还支持部分 Python 3.1 语法。")]),s._v(" "),a("h3",{attrs:{id:"输出中文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出中文"}},[s._v("#")]),s._v(" "),a("strong",[s._v("输出中文")])]),s._v(" "),a("p",[s._v("头加上**# coding=utf-8**\n**注意：**Python3.X 源码文件默认使用utf-8编码，所以可以正常解析中文，无需指定 UTF-8 编码。")]),s._v(" "),a("p",[s._v("**注意：**如果你使用编辑器，同时需要设置 py 文件存储的格式为 UTF-8")]),s._v(" "),a("h3",{attrs:{id:"python-标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-标识符"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Python 标识符")])]),s._v(" "),a("ul",[a("li",[s._v("字母、数字、下划线组成")]),s._v(" "),a("li",[s._v("区分大小写")]),s._v(" "),a("li",[s._v("以下划线开头的有特殊含义：\n"),a("ul",[a("li",[s._v("单下划线开头的，_foo表示不能直接访问的类属性，不能通过from xxx import * 导入")]),s._v(" "),a("li",[s._v("双下划线开头的，__foo代表类的私有成员")]),s._v(" "),a("li",[s._v("双下划线开头和结尾的，"),a("code",[s._v("__foo__")]),s._v("代表python中的特殊用法")])])])]),s._v(" "),a("h3",{attrs:{id:"python保留字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python保留字符"}},[s._v("#")]),s._v(" "),a("strong",[s._v("python保留字符")])]),s._v(" "),a("ul",[a("li",[s._v("全是小写")]),s._v(" "),a("li",[s._v("常用的一些英语词汇")])]),s._v(" "),a("h3",{attrs:{id:"行和缩进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行和缩进"}},[s._v("#")]),s._v(" "),a("strong",[s._v("行和缩进")])]),s._v(" "),a("ul",[a("li",[s._v("保持一致，强制要求！！比如一个tab")])]),s._v(" "),a("h3",{attrs:{id:"关于引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于引号"}},[s._v("#")]),s._v(" "),a("strong",[s._v("关于引号")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("单引号，双引号都行，但前后保持一致")])]),s._v(" "),a("li",[a("p",[s._v("三引号比较特殊，可以多行文本使用，或者多行注释使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("paragraph='''段落第一行段落第二行'''\"\"\"这里是多行注释\"\"\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"关于空行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于空行"}},[s._v("#")]),s._v(" "),a("strong",[s._v("关于空行")])]),s._v(" "),a("ul",[a("li",[s._v("非强制要求")]),s._v(" "),a("li",[s._v("函数间最好加一个")])]),s._v(" "),a("h3",{attrs:{id:"关于不换行输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于不换行输出"}},[s._v("#")]),s._v(" "),a("strong",[s._v("关于不换行输出")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('print("a","b")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"标准数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准数据类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("标准数据类型")])]),s._v(" "),a("p",[s._v("五个：数字，字符串，列表，元组（Tuple），字典")]),s._v(" "),a("h3",{attrs:{id:"数字类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("数字类型")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("是不可变类型的变量")])]),s._v(" "),a("li",[a("p",[s._v("有int，long，float，complex四种，python3是没有long了，统一int支持")])]),s._v(" "),a("li",[a("p",[s._v("long的举例："),a("code",[s._v("123123L")])])]),s._v(" "),a("li",[a("p",[s._v("float："),a("code",[s._v("2.32e10")])])]),s._v(" "),a("li",[a("p",[s._v("complex："),a("code",[s._v("3+2j")])])]),s._v(" "),a("li",[a("p",[s._v("类型转换："),a("code",[s._v("int(x),float(x),str(x)")])])]),s._v(" "),a("li",[a("p",[s._v("使用math、cmath模块做数学运算")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import math\nimport cmath\n\ncmath.sin(1.5)\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("字符串类型")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("可以用"),a("code",[s._v("str[i]")]),s._v("取字符串中的字符")])]),s._v(" "),a("li",[a("p",[s._v("字符串的拼接"),a("code",[s._v("+")]),s._v("，重复``")])]),s._v(" "),a("li",[a("p",[s._v("字符串的切割遵循**[头下标:尾下标]**")])]),s._v(" "),a("li",[a("p",[s._v("不支持单字符类型，单字符在python中也是字符串类型")])]),s._v(" "),a("li",[a("p",[s._v("转义：反斜杠"),a("code",[s._v("\\")])])]),s._v(" "),a("li",[a("p",[s._v("字符串有运算符，牛逼，+，*（重复输出），[]，in，not in")])]),s._v(" "),a("li",[a("p",[s._v("字符串格式化：s%，和C类似的操作")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('print("shit %s" % ("happens"))\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("三引号：Python 三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。")]),s._v(" "),a("blockquote",[a("p",[s._v("三引号让程序员从引号和特殊字符串的泥潭里面解脱出来，自始至终保持一小块字符串的格式是所谓的WYSIWYG（所见即所得）格式的。")]),s._v(" "),a("p",[s._v("一个典型的用例是，当你需要一块HTML或者SQL时，这时当用三引号标记，使用传统的转义字符体系将十分费神。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("text_block = '''\n这是一个使用三引号的示例。\n这里有多行文字，可以自由插入。\n结束。\n'''\nprint(text_block)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("unicode:先记录下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('print(u"\\u0020")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("字符串内建函数：比如string.split()")])])]),s._v(" "),a("h3",{attrs:{id:"列表类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("列表类型")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("标识")])]),s._v(" "),a("li",[a("p",[s._v("可以包含数字、字符串甚至是列表类型的元素")])]),s._v(" "),a("li",[a("p",[s._v("举例："),a("code",[s._v("list=[123,'abc','s']")])])]),s._v(" "),a("li",[a("p",[s._v("使用最频繁")])]),s._v(" "),a("li",[a("p",[s._v("函数和方法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('list1=[123,"asdf"]\nlist2=["asdf",123]\nlist3=["f","d"]\ncmp(list1,list2)\nlen(list1)\nmax(list3)\nmin(list3)\n# 把元组转换为list\nlist(seq)\n\nlist.append()\nlist.insert(index,obj)\nlist.count(obj)\nlist.extend(seq)\nlist.index(obj)\nlist.pop([index])\nlist.remove(obj)\nlist.reverse()\nlist.sort()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"元组类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元组类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("元组类型")])]),s._v(" "),a("ul",[a("li",[s._v("()标识")]),s._v(" "),a("li",[s._v("可以包含数字、字符串甚至是列表类型的元素")]),s._v(" "),a("li",[s._v("举例："),a("code",[s._v("tu=(123,'abc','s')")])]),s._v(" "),a("li",[s._v("不可修改，约等于只读列表")])]),s._v(" "),a("h3",{attrs:{id:"字典类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("字典类型")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("{}标识")])]),s._v(" "),a("li",[a("p",[s._v("key-value形式")])]),s._v(" "),a("li",[a("p",[s._v("key可以是数字或字符串；实际上更准确的描述是，key必须要是不可变的类型，所以key可以是数字、字符串、元组，不能是列表")])]),s._v(" "),a("li",[a("p",[s._v("可以通过.keys() .values()函数获取key列表，value列表")])]),s._v(" "),a("li",[a("p",[s._v("key不能重复，重复的话，会覆盖掉")])]),s._v(" "),a("li",[a("p",[s._v("函数和方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cmp(dict1,dict2)\nlen(dict)\nstr(dict)#3.1版本好像不能用来着\ntype(dict)\n\ndict.clear()\ndict.copy()#浅复制\ndict.items() #相当于entrySet,以列表返回可遍历的(键, 值) 元组数组 dict_items([(1,123),(2,2324)])\ndict.keys()#以列表返回一个字典所有的键 dict_keys([1,2])\ndict.values()#以列表返回一个字典所有的值 dict_values([123,2324])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[s._v("#")]),s._v(" "),a("strong",[s._v("数据类型转换")])]),s._v(" "),a("p",[s._v("各种函数，待使用中补充")]),s._v(" "),a("h3",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" "),a("strong",[s._v("运算符")])]),s._v(" "),a("ul",[a("li",[s._v("特殊的运算符：成员运算符和身份运算符")]),s._v(" "),a("li",[s._v("成员：in，举例："),a("code",[s._v("print(’a’ in list)")])]),s._v(" "),a("li",[s._v("身份：is，实际就是比对是否是同一个对象这样子，python也是面向对象的")])]),s._v(" "),a("h3",{attrs:{id:"条件语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[s._v("#")]),s._v(" "),a("strong",[s._v("条件语句")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('num = 10\nif num <= 90\n    print("shit, too cheap")\nelif num == 1000 and num = 9999\n    print("haha")\nelse:\n    print("I will take it anyway")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[s._v("#")]),s._v(" "),a("strong",[s._v("while语句")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a=1\nwhile (a<9 and a>3):\n    print('ok')\n    a = a+1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("特殊的用法是"),a("strong",[s._v("循环使用 else 语句")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('count = 0\nwhile count < 5:\n   print count, " is  less than 5"\n   count = count + 1\nelse:\n   print count, " is not less than 5"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"for循环语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for循环语句"}},[s._v("#")]),s._v(" "),a("strong",[s._v("for循环语句")])]),s._v(" "),a("p",[s._v("python的for循环语句，可以遍历任何序列的项目，比如列表或字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("long_str = 'adflj123'\nfor str in long_str:\n    print(str)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以通过其他参数，按序列号遍历")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("long_str = 'adflj123'\nfor index in range(len(long_str)):\n    print(long_str[index])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("也可以像while一样用else循环使用")]),s._v(" "),a("ul",[a("li",[s._v("在 python 中，for … else 表示这样的意思，for 中的语句和普通的没有区别，else 中的语句会在循环正常执行完（即 for 不是通过 break 跳出而中断的）的情况下执行，while … else 也是一样")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for num in range(10,20):  # 迭代 10 到 20 之间的数字\n   for i in range(2,num): # 根据因子迭代\n      if num%i == 0:      # 确定第一个因子\n         j=num/i          # 计算第二个因子\n         print ('%d 等于 %d * %d' % (num,i,j))\n         break            # 跳出当前循环\n   else:                  # 循环的 else 部分\n      print ('%d 是一个质数' % num)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"日期和时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间"}},[s._v("#")]),s._v(" "),a("strong",[s._v("日期和时间")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("主要使用time,calendar,datetime,pytz,deteutil模块")])]),s._v(" "),a("li",[a("p",[s._v("很多Python函数用一个元组装起来的9组数字处理时间")])]),s._v(" "),a("li",[a("p",[s._v("calendar主要是日历，先不管，主要看time")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import calendar\nimport time\n\ncalendar.month(2023,1)\ntime.time()#当前时间戳\ntime.localtime()#time.struct_time(tm_year=2016, tm_mon=4, tm_mday=7, tm_hour=10, tm_min=3, tm_sec=27, tm_wday=3, tm_yday=98, tm_isdst=0) 元组保存时间\ntime.asctime()#获取格式化时间 Thu Apr  7 10:05:21 2016\ntime.strftime(format[,time])#格式化日期 比如 %Y-%m-%d %H:%M:%S\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("blockquote",[a("p",[s._v("python中时间日期格式化符号：")]),s._v(" "),a("ul",[a("li",[s._v("%y 两位数的年份表示（00-99）")]),s._v(" "),a("li",[s._v("%Y 四位数的年份表示（000-9999）")]),s._v(" "),a("li",[s._v("%m 月份（01-12）")]),s._v(" "),a("li",[s._v("%d 月内中的一天（0-31）")]),s._v(" "),a("li",[s._v("%H 24小时制小时数（0-23）")]),s._v(" "),a("li",[s._v("%I 12小时制小时数（01-12）")]),s._v(" "),a("li",[s._v("%M 分钟数（00-59）")]),s._v(" "),a("li",[s._v("%S 秒（00-59）")]),s._v(" "),a("li",[s._v("%a 本地简化星期名称")]),s._v(" "),a("li",[s._v("%A 本地完整星期名称")]),s._v(" "),a("li",[s._v("%b 本地简化的月份名称")]),s._v(" "),a("li",[s._v("%B 本地完整的月份名称")]),s._v(" "),a("li",[s._v("%c 本地相应的日期表示和时间表示")]),s._v(" "),a("li",[s._v("%j 年内的一天（001-366）")]),s._v(" "),a("li",[s._v("%p 本地A.M.或P.M.的等价符")]),s._v(" "),a("li",[s._v("%U 一年中的星期数（00-53）星期天为星期的开始")]),s._v(" "),a("li",[s._v("%w 星期（0-6），星期天为星期的开始")]),s._v(" "),a("li",[s._v("%W 一年中的星期数（00-53）星期一为星期的开始")]),s._v(" "),a("li",[s._v("%x 本地相应的日期表示")]),s._v(" "),a("li",[s._v("%X 本地相应的时间表示")]),s._v(" "),a("li",[s._v("%Z 当前时区的名称")]),s._v(" "),a("li",[s._v("%% %号本身")])])])])]),s._v(" "),a("h3",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("函数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("基本语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("def sumAll(*var_args):\n    sum = 0\n    for var in var_args:\n            sum = sum + var\n    return sum\nprint(sumAll(1,2,3))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("关于参数传递，需要注意传入的是什么类型，总体来分有两种大类型")]),s._v(" "),a("ul",[a("li",[s._v("不可变类型对象：数字，字符串，元组")]),s._v(" "),a("li",[s._v("可变类型对象：列表，字典")]),s._v(" "),a("li",[s._v("可变类型对象，在函数中的修改，会影响入参本身")])])]),s._v(" "),a("li",[a("p",[s._v("可变参数：如上面示例的参数就是")])]),s._v(" "),a("li",[a("p",[s._v("lambda表达式创建函数")]),s._v(" "),a("blockquote",[a("p",[s._v("lambda的主体是一个表达式，而不是一个代码块。仅仅能在lambda表达式中封装有限的逻辑进去。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 可写函数说明\nsum = lambda arg1, arg2: arg1 + arg2\n\n# 调用sum函数\nprint "相加后的值为 : ", sum( 10, 20 )\nprint "相加后的值为 : ", sum( 20, 20 )\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("return:")]),s._v(" "),a("ul",[a("li",[s._v("可以没有return，这样会认为返回的是none")])])])]),s._v(" "),a("h3",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[s._v("#")]),s._v(" "),a("strong",[s._v("模块")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("模块是一个python文件，以.py结尾，包含了python对象定义和python语句")])]),s._v(" "),a("li",[a("p",[s._v("引入模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import math\nfrom math import fibonacci #从math模块中，只引入fibonacci部分\nfrom math import *\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("dir函数：可以看某个模块有哪些变量、函数")])]),s._v(" "),a("li",[a("p",[s._v("包：其实就是文件夹，但该文件夹下必须有特定文件，文件内容不管，但必须要有")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("__init__.py\n\ntest.py\npackage_runoob\n|-- __init__.py\n|-- runoob1.py\n|-- runoob2.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("使用包的代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from package.runoob1 import runoob1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"文件i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件i-o"}},[s._v("#")]),s._v(" "),a("strong",[s._v("文件I/O")])]),s._v(" "),a("ul",[a("li",[s._v("open()")]),s._v(" "),a("li",[s._v("file函数")]),s._v(" "),a("li",[s._v("注意关闭文件流，释放资源")])]),s._v(" "),a("h3",{attrs:{id:"异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[s._v("#")]),s._v(" "),a("strong",[s._v("异常处理")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("基本语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("try:\n    # some code that might raise an exception\nexcept SomeException:\n    # exception handling code\nelse:\n    # code to execute if no exception was raised\nfinally:\n    # code to execute regardless of whether an exception was raised\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("except可以不加异常类型，catch各种类型")])]),s._v(" "),a("li",[a("p",[s._v("自行发起异常")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('raise [Exception [, args [, traceback]]]\nraise Exception("Invalid param")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("自定义异常：通过创建一个新的异常类，程序可以命名它们自己的异常。异常应该是典型的继承自Exception类，通过直接或间接的方式。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Networkerror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RuntimeError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n       self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" arg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);